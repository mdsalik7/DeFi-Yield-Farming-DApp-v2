{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nexport const UserContext = /*#__PURE__*/React.createContext({\n  userAddress: '',\n  setUserAddress: () => [],\n  daiBalance: '',\n  setDaiBalance: () => {},\n  stakingBalance: '',\n  setStakingBalance: () => {},\n  isStaking: '',\n  setIsStaking: () => {},\n  hodlBalance: '',\n  setHodlBalance: () => {},\n  hodlYield: '',\n  setHodlYield: () => {}\n});\nexport const UserProvider = UserContext.Provider;\nexport const useUser = () => {\n  _s();\n\n  return useContext(UserContext);\n};\n\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"sources":["E:/Github/yield-farm/src/context/UserContext.js"],"names":["React","useContext","UserContext","createContext","userAddress","setUserAddress","daiBalance","setDaiBalance","stakingBalance","setStakingBalance","isStaking","setIsStaking","hodlBalance","setHodlBalance","hodlYield","setHodlYield","UserProvider","Provider","useUser"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AAC3CC,EAAAA,WAAW,EAAE,EAD8B;AAE3CC,EAAAA,cAAc,EAAE,MAAM,EAFqB;AAG3CC,EAAAA,UAAU,EAAE,EAH+B;AAI3CC,EAAAA,aAAa,EAAE,MAAM,CAAE,CAJoB;AAK3CC,EAAAA,cAAc,EAAE,EAL2B;AAM3CC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CANgB;AAO3CC,EAAAA,SAAS,EAAE,EAPgC;AAQ3CC,EAAAA,YAAY,EAAE,MAAM,CAAE,CARqB;AAS3CC,EAAAA,WAAW,EAAE,EAT8B;AAU3CC,EAAAA,cAAc,EAAE,MAAM,CAAE,CAVmB;AAW3CC,EAAAA,SAAS,EAAE,EAXgC;AAY3CC,EAAAA,YAAY,EAAE,MAAM,CAAE;AAZqB,CAApB,CAApB;AAeP,OAAO,MAAMC,YAAY,GAAGd,WAAW,CAACe,QAAjC;AACP,OAAO,MAAMC,OAAO,GAAG;AAAA;;AAAA,SAAMjB,UAAU,CAACC,WAAD,CAAhB;AAAA,CAAhB;;GAAMgB,O","sourcesContent":["import React, { useContext } from 'react'\r\n\r\nexport const UserContext = React.createContext({\r\n    userAddress: '', \r\n    setUserAddress: () => [],\r\n    daiBalance: '', \r\n    setDaiBalance: () => {},\r\n    stakingBalance: '',\r\n    setStakingBalance: () => {},\r\n    isStaking: '',\r\n    setIsStaking: () => {},\r\n    hodlBalance: '',\r\n    setHodlBalance: () => {},\r\n    hodlYield: '',\r\n    setHodlYield: () => {}\r\n})\r\n\r\nexport const UserProvider = UserContext.Provider\r\nexport const useUser = () => useContext(UserContext)"]},"metadata":{},"sourceType":"module"}